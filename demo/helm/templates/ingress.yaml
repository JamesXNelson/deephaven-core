apiVersion: networking.k8s.io/v1
# To make autocomplete work, hover the yellow-backgrounded "Ingress"
# There should be a link that'll pop up a window where you can add files / URLs
# Download/add https://raw.githubusercontent.com/kubernetes/kubernetes/master/api/openapi-spec/swagger.json
kind: Ingress
metadata:
  name: {{ .Values.dh.ingressName }}
  annotations:
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.dh.ipAddrName }}
#    networking.gke.io/managed-certificates: {{ .Values.dh.managedCertName  }}
    networking.gke.io/pre-shared-cert: {{ .Values.dh.certWildcard  }}
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/v1beta1.FrontendConfig: {{ .Values.dh.frontendConfigName }}
    # we redirect http->https, but need to explicitly enable it
    kubernetes.io/ingress.allow-http: "true"
spec:
  # The default backend will be the demo-server controller,
  # as it will be responsible for connecting you to the correct DNS vs. pod/service.
  # So, if you visit does-not-exist-anymore.domain.com/ide/ (route to real service has been removed),
  # you'll get sent to the controller who will redirect you to a warm DNS name.
  defaultBackend:
    service:
      # Our controller will redirect everyone to worker-specific subdomains
      name: {{ .Values.dh.svcNameControl }}
      port:
        number: {{ .Values.dh.portControlInternal }}
  rules:
    - host: {{ .Values.dh.dnsName }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Values.dh.svcNameControl }}
                port:
                  number: {{ .Values.dh.portControlInternal }}
            pathType: ImplementationSpecific
            path: "/*"
    - host: {{ .Values.dh.dnsName }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Values.dh.svcNameControl }}
                port:
                  number: {{ .Values.dh.portControlInternal }}
            pathType: ImplementationSpecific
            path: "/new"
      # Define a template for default.demo.deephaven.app.
      # This is a default worker that is always initialized immediately
      # It is also loaded by the controller, who simply mutates this object
      # to create new workers once the default instance has already been taken.
      # The controller will mutate the host and the service name, to isolate workers
      # DO NOT CHANGE OR REMOVE THE default. prefix without updating / deprecating HelmGenerator.java
    - host: default.{{ .Values.dh.dnsName }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Values.dh.svcNameEnvoy }}
                port:
                  number: {{ .Values.dh.portEnvoyInternal }}
            pathType: ImplementationSpecific
            path: "/*"
